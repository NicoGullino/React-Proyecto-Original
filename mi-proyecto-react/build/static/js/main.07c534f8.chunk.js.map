{"version":3,"sources":["componentes/Contador.js","api.js","componentes/TablaUsuarios.js","componentes/TablaDomicilios.js","componentes/Formulario.js","App.js","index.js"],"names":["Contador","props","state","contador","Number","valorInicial","contador2","console","log","this","refTimer","setInterval","incrementar","clearInterval","setState","prevstate","className","onClick","incrementar2","React","Component","Api","url","id","axios","get","then","respuesta","data","datos","post","put","delete","TablaUsuarios","usuarios","borrar","actualizar","disabled","length","map","usuario","key","nombre","edad","TablaDomicilios","domicilios","domicilio","calle","numero","localidad","api","apiJava","Formulario","dirty","deshabilitar","getUsuarios","getDomicilios","dato","rta","getAll","e","preventDefault","stateAux","push","offset","findIndex","splice","nombreDirty","edadDirty","autoComplete","htmlFor","type","value","onChange","target","disableButton","enviar","App","mostrarContador","mostrarFormulario","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07c534f8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Contador.css'\r\n\r\n\r\nclass Contador extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('constructor Contador')\r\n\r\n        /* this.state = {\r\n            contador: Number(props.valorInicial)\r\n        } */\r\n    }\r\n  \r\n    state = {\r\n        contador: Number(this.props.valorInicial),\r\n        contador2: Number(this.props.valorInicial)\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount Contador')\r\n        //this.setState({contador: Number(this.props.valorInicial)})\r\n        this.refTimer = setInterval(() => this.incrementar(),2000)\r\n    }\r\n\r\n    UNSAFE_componentWillUpdate() {\r\n        console.log('componentWillUpdate Contador')\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate Contador')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.refTimer)\r\n        console.log('componentWillUnmount Contador')\r\n    }\r\n\r\n\r\n    incrementar() {\r\n        console.log('incrementar')\r\n        //this.setState({contador: this.state.contador + 1}) //Funciona por está MAL!!\r\n        this.setState(prevstate => ({contador: prevstate.contador + 1})) //Forma Correcta\r\n    }\r\n\r\n    incrementar2() {\r\n        console.log('incrementar 2')\r\n        //this.setState({contador: this.state.contador + 1}) //Funciona por está MAL!!\r\n        this.setState(prevstate => ({contador2: prevstate.contador2 + 1})) //Forma Correcta\r\n    }\r\n\r\n    render() {\r\n        console.log('render Contador', this.state)\r\n\r\n        let { contador,contador2 } = this.state\r\n        //let { valorInicial } = this.props\r\n\r\n        return (\r\n            <div className=\"Contador\">\r\n                <div className=\"jumbotron mt-3\">\r\n                    <h2>Componente Contador</h2>\r\n                    <hr/>\r\n                    {/* <h4>{this.state.contador}</h4> */}\r\n                    <h4>{contador}</h4>\r\n                    {/* <h5>{this.props.valorInicial}</h5> */}\r\n                    {/* <h5>{valorInicial}</h5> */}\r\n                    {/* <button className=\"btn btn-success mt-2\" onClick={this.incrementar}> */}\r\n                    <button className=\"btn btn-success mt-2\" onClick={() => this.incrementar()}>\r\n                        Incrementar\r\n                    </button>\r\n                    <hr/>\r\n                    <h4>{contador2}</h4>\r\n                    <button className=\"btn btn-success mt-2\" onClick={() => this.incrementar2()}>\r\n                        Incrementar 2\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contador","import axios from 'axios'\r\n\r\nclass Api {\r\n    constructor(url) {\r\n        this.url = url\r\n    }\r\n\r\n    get(id) {\r\n        return axios.get(this.url+id).then(respuesta => respuesta.data)\r\n    }\r\n\r\n    getAll() {\r\n        return axios.get(this.url).then(respuesta => respuesta.data)\r\n    }\r\n\r\n    post(datos) {\r\n        return axios.post(this.url,datos).then(respuesta => respuesta.data)\r\n    }\r\n\r\n    put(id,datos) {\r\n        return axios.put(this.url+id,datos).then(respuesta => respuesta.data)\r\n    }\r\n\r\n    delete(id) {\r\n        return axios.delete(this.url+id).then(respuesta => respuesta.data)\r\n    }\r\n}\r\n\r\nexport default Api","import React from 'react'\r\n\r\n\r\nfunction TablaUsuarios(props) {\r\n\r\n    let { usuarios, borrar, actualizar, disabled } = props\r\n\r\n    return (\r\n        <>\r\n        { usuarios.length === 0 && <div className=\"alert alert-warning\">No se encontraron datos</div> }\r\n        { usuarios.length > 0 &&\r\n        <table className=\"table table-dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>NOMBRE</th>\r\n                    <th>EDAD</th>\r\n                    <th>ACCIONES</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                usuarios\r\n                //.filter( usuario => usuario.id < 5 )\r\n                .map( (usuario, key) => \r\n                    <tr key={key}>\r\n                        <td>{usuario.id}</td>                               \r\n                        <td>{usuario.nombre}</td>                               \r\n                        <td>{usuario.edad}</td>\r\n                        <td>\r\n                            <button className=\"btn btn-danger mr-3\" onClick={() => borrar(usuario.id)}>BORRAR</button>\r\n                            <button className=\"btn btn-warning\" disabled={disabled} onClick={() => actualizar(usuario.id)}>ACTUALIZAR</button>\r\n                        </td>                               \r\n                    </tr>\r\n                )\r\n                }\r\n            </tbody>\r\n        </table> \r\n        }\r\n        </>       \r\n    )\r\n}\r\n\r\nexport default TablaUsuarios","import React from 'react'\r\n\r\n\r\nfunction TablaDomicilios(props) {\r\n\r\n    let { domicilios } = props\r\n\r\n    return (\r\n        <>\r\n        { domicilios.length === 0 && <div className=\"alert alert-warning\">No se encontraron datos</div> }\r\n        { domicilios.length > 0 &&\r\n        <table className=\"table table-dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>CALLE</th>\r\n                    <th>NUMERO</th>\r\n                    <th>LOCALIDAD</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                domicilios.map( (domicilio, key) => \r\n                    <tr key={key}>\r\n                        <td>{domicilio.id}</td>                               \r\n                        <td>{domicilio.calle}</td>                               \r\n                        <td>{domicilio.numero}</td>                               \r\n                        <td>{domicilio.localidad}</td>                               \r\n                    </tr>\r\n                )\r\n                }\r\n            </tbody>\r\n        </table>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TablaDomicilios","import React from 'react'\r\nimport './Formulario.css'\r\nimport Api from '../api'\r\nimport TablaUsuarios from './TablaUsuarios'\r\nimport TablaDomicilios from './TablaDomicilios'\r\n\r\nconst URL = 'https://5c8ef17a3e557700145e85c7.mockapi.io/form/'\r\nconst URL_JAVA = 'http://localhost:8080/api/domicilios/'\r\n\r\n\r\nconst api = new Api(URL)\r\nconst apiJava = new Api(URL_JAVA)\r\n\r\n\r\nclass Formulario extends React.Component {\r\n\r\n    state = {\r\n        datos : {\r\n            nombre : '',\r\n            edad: ''\r\n        },\r\n        dirty: {\r\n            nombre: false,\r\n            edad: false\r\n        },\r\n        deshabilitar : false,\r\n        usuarios: [],\r\n        domicilios: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUsuarios()\r\n        this.getDomicilios()\r\n    }\r\n\r\n    /* --------------- */\r\n    /* API Rest : GET  */\r\n    /* --------------- */\r\n    async getDomicilios() {\r\n        try {\r\n            /* POST */\r\n            let dato = {\r\n                numero: 123,\r\n                calle: \"Lavalle 2\",\r\n                localidad: \"Capital 2\"\r\n            }\r\n            let rta = await apiJava.post(dato)\r\n            console.log('getDomicilios apiJava POST', rta)\r\n\r\n            /* PUT */\r\n            dato = {\r\n                numero: 321,\r\n                calle: \"Lavalle 3\",\r\n                localidad: \"Capital 3\"\r\n            }\r\n            rta = await apiJava.put(9, dato)\r\n            console.log('getDomicilios apiJava PUT', rta)\r\n\r\n            /* DELETE */\r\n            rta = await apiJava.delete(3)\r\n            console.log('getDomicilios apiJava DELETE', rta)\r\n\r\n            /* GET */\r\n            rta = await apiJava.get(2)\r\n            console.log('getDomicilios apiJava GET', rta)\r\n\r\n            /* GET ALL */\r\n            let datos = await apiJava.getAll()\r\n            console.log('getDomicilios apiJava GET ALL', datos)\r\n            this.setState({domicilios: datos})\r\n        }\r\n        catch(error) {\r\n            console.log('Error getDomicilios', error)\r\n        }\r\n    }\r\n\r\n    /* --------------- */\r\n    /* API Rest : GET  */\r\n    /* --------------- */\r\n    async getUsuarios() {\r\n\r\n        try {\r\n            /* let datos = await apiJava.getAll()\r\n            console.log('getUsuarios apiJava', datos) */\r\n            let datos = await api.getAll()\r\n            console.log('getUsuarios api', datos)\r\n            this.setState({usuarios: datos})\r\n        }\r\n        catch(error) {\r\n            console.log('Error getUsuarios', error)\r\n        }\r\n    }\r\n\r\n    /* --------------- */\r\n    /* API Rest : POST */\r\n    /* --------------- */\r\n    async enviar(e) {\r\n        try {\r\n            e.preventDefault()\r\n            console.log(this.state.datos)\r\n\r\n            /* Deshabilito el botón enviar */\r\n            this.setState({deshabilitar: true})\r\n\r\n            /* Envio los datos a la nube */\r\n            let datos = await api.post(this.state.datos)\r\n            console.log(datos)\r\n\r\n            /* Habilito el botón enviar */\r\n            //this.setState({deshabilitar: false})\r\n\r\n            let stateAux = {...this.state}\r\n            stateAux.datos.nombre = ''\r\n            stateAux.datos.edad = ''\r\n            stateAux.dirty.nombre = false\r\n            stateAux.dirty.edad = false\r\n            stateAux.deshabilitar = false\r\n            stateAux.usuarios.push(datos)\r\n            this.setState(stateAux)\r\n\r\n            //this.getUsuarios()\r\n        }\r\n        catch(error) {\r\n            console.log('Error enviar', error)\r\n        }\r\n    }\r\n\r\n    /* ----------------- */\r\n    /* API Rest : DELETE */\r\n    /* ----------------- */\r\n    async borrar(id) {\r\n        console.log('borrar', id)\r\n\r\n        try {\r\n            let datos = await api.delete(id)\r\n            console.log(datos)\r\n\r\n            let offset = this.state.usuarios.findIndex(usuario => usuario.id === datos.id)\r\n            let stateAux = {...this.state}\r\n            stateAux.usuarios.splice(offset,1)\r\n            this.setState({stateAux})\r\n\r\n            //this.getUsuarios()\r\n        }\r\n        catch(error) {\r\n            console.log('error borrar', error)\r\n        }\r\n    }\r\n\r\n\r\n    /* ----------------- */\r\n    /*  API Rest : PUT   */\r\n    /* ----------------- */\r\n    async actualizar(id) {\r\n        console.log('actualizar', id)\r\n\r\n        try {\r\n\r\n            /* Deshabilito el botón enviar */\r\n            this.setState({deshabilitar: true})\r\n\r\n            let datos = await api.put(id, this.state.datos)\r\n            console.log(datos)\r\n\r\n            let offset = this.state.usuarios.findIndex(usuario => usuario.id === datos.id)\r\n\r\n            let stateAux = {...this.state}\r\n            stateAux.datos.nombre = ''\r\n            stateAux.datos.edad = ''\r\n            stateAux.dirty.nombre = false\r\n            stateAux.dirty.edad = false\r\n            stateAux.deshabilitar = false\r\n            stateAux.usuarios.splice(offset, 1, datos)\r\n            this.setState(stateAux)\r\n\r\n            //this.getUsuarios()\r\n        }\r\n        catch(error) {\r\n            console.log('error actualizar', error)\r\n        }\r\n    }\r\n\r\n    /*\r\n    getUsuarios() {\r\n        api.getAll()\r\n        .then(datos => {\r\n            console.log(datos)\r\n            this.setState({usuarios: datos})\r\n        })\r\n    }\r\n\r\n    getDomicilios() {\r\n        apiJava.getAll()\r\n        .then(datos => {\r\n            console.log(datos)\r\n            this.setState({domicilios: datos})\r\n        })\r\n    }\r\n\r\n    enviar(e) {\r\n        e.preventDefault()\r\n        console.log(this.state.datos)\r\n\r\n        // Deshabilito el botón enviar\r\n        this.setState({deshabilitar: true})\r\n\r\n        // Envio los datos a la nube\r\n        api.post(this.state.datos)\r\n        .then( datos => {\r\n            console.log(datos)\r\n\r\n            // Habilito el botón enviar\r\n            //this.setState({deshabilitar: false})\r\n\r\n            let stateAux = {...this.state}\r\n            stateAux.datos.nombre = ''\r\n            stateAux.datos.edad = ''\r\n            stateAux.dirty.nombre = false\r\n            stateAux.dirty.edad = false\r\n            stateAux.deshabilitar = false\r\n            this.setState(stateAux)\r\n\r\n            this.getUsuarios()\r\n        })\r\n    }\r\n    */\r\n\r\n    disableButton() {\r\n        let { nombre, edad } = this.state.datos\r\n        let { deshabilitar } = this.state\r\n        return deshabilitar || nombre.length === 0 || edad.length === 0\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        //console.log(this.state)\r\n        let { nombre, edad } = this.state.datos\r\n        let { nombre:nombreDirty, edad:edadDirty } = this.state.dirty\r\n        let { usuarios, domicilios } = this.state\r\n\r\n        return(\r\n            <div className=\"Formulario\">\r\n                <div className=\"jumbotron mt-3\">\r\n                    <h2>Componente Formulario</h2>\r\n                    <hr/>\r\n\r\n                    <form autoComplete=\"off\">\r\n                        {/* --------------------------------------- */}\r\n                        {/*             Campo nombre                */}\r\n                        {/* --------------------------------------- */}\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombre\">Nombre</label>\r\n                            <input type=\"text\" id=\"nombre\" className=\"form-control\" value={nombre} onChange={e => {\r\n                                this.setState({\r\n                                    datos: {...this.state.datos, nombre: e.target.value},\r\n                                    dirty: {...this.state.dirty, nombre: true}\r\n                                })\r\n                            }}/>\r\n                            {/* --------------------------------------- */}\r\n                            {/* Mensajes de validación del campo nombre */}\r\n                            {/* --------------------------------------- */}\r\n                            {\r\n                                nombreDirty && nombre.length === 0 &&\r\n                                <div className=\"alert alert-danger mt-1\">\r\n                                    Campo Nombre Requerido\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* --------------------------------------- */}\r\n                        {/*              Campo edad                 */}\r\n                        {/* --------------------------------------- */}\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"edad\">Edad</label>\r\n                            <input type=\"number\" id=\"edad\" className=\"form-control\" value={edad} onChange={e =>\r\n                                //this.setState({edad: e.target.value})\r\n                                this.setState({\r\n                                    datos: {...this.state.datos, edad: e.target.value},\r\n                                    dirty: {...this.state.dirty, edad: true}\r\n                                })\r\n                            }/>\r\n                            {/* --------------------------------------- */}\r\n                            {/* Mensajes de validación del campo edad   */}\r\n                            {/* --------------------------------------- */}\r\n                            {\r\n                                edadDirty && edad.length === 0 &&\r\n                                <div className=\"alert alert-danger mt-1\">\r\n                                    Campo Edad Requerido\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* --------------------------------------- */}\r\n                        {/*           Botón de Envío                */}\r\n                        {/* --------------------------------------- */}\r\n                        <button className=\"btn btn-success my-3\" disabled={this.disableButton()} onClick={e => \r\n                            this.enviar(e)\r\n                        }>Enviar</button>\r\n\r\n                    </form>\r\n\r\n                    <hr/>\r\n                    <hr/>\r\n\r\n                    {/* -------------------------------------------------------- */}\r\n                    {/* REPRESENTACIÓN DE LOS DATOS INGRESADOS POR EL FORMULARIO */}\r\n                    {/* -------------------------------------------------------- */}\r\n                    <TablaUsuarios \r\n                        usuarios={usuarios} \r\n                        borrar={id => this.borrar(id) }\r\n                        actualizar={id => this.actualizar(id)}\r\n                        disabled={this.disableButton()}\r\n                    />\r\n\r\n                    <hr/>\r\n\r\n                    {/* -------------------------------------------------------- */}\r\n                    {/*      REPRESENTACIÓN DE LOS DATOS DEL BACKEND JAVA        */}\r\n                    {/* -------------------------------------------------------- */}\r\n                    <TablaDomicilios domicilios={domicilios}/>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formulario","import React from 'react';\nimport './App.css';\nimport Contador from './componentes/Contador';\nimport Formulario from './componentes/Formulario';\n\n\nclass App extends React.Component {\n  \n  state = {\n    mostrarContador : !true,\n    mostrarFormulario: true\n  }\n\n  render() {\n\n    let { mostrarContador, mostrarFormulario } = this.state\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"jumbotron mt-3\">\n            <h1>Componente Principal</h1>\n            <hr/>\n\n            {/* -------------------------------- */}\n            {/* CONTROL DE LA VISTA DEL CONTADOR */}\n            {/* -------------------------------- */}\n            <button className=\"btn btn-info my-2\" onClick={() =>\n              this.setState(prevstate => ({mostrarContador: !prevstate.mostrarContador}))\n            }>{ mostrarContador? 'Ocultar':'Mostrar Contador'}</button>\n            { mostrarContador &&\n              <>\n                <Contador valorInicial=\"456\" />\n                <Contador valorInicial=\"789\" />\n              </>\n            }\n\n            <hr/>\n\n            {/* ---------------------------------- */}\n            {/* CONTROL DE LA VISTA DEL FORMULARIO */}\n            {/* ---------------------------------- */}\n            <button className=\"btn btn-info my-2\" onClick={() =>\n              this.setState(prevstate => ({mostrarFormulario: !prevstate.mostrarFormulario}))\n            }>{ mostrarFormulario? 'Ocultar':'Mostrar Formulario'}</button>\n            { mostrarFormulario && <Formulario /> }\n\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery'\nimport 'popper.js'\nimport 'bootstrap'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}